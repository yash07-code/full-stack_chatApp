name: Deploy Full-Stack ChatApp

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Login to Docker Hub
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    # Backend
      - name: Build Backend Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chatapp-backend ./backend

      - name: Push Backend to Docker Hub
        run: docker push ${{ secrets.DOCKER_PASSWORD }}/chatapp-backend

# Frontend
      - name: Build Frontend Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chatapp-frontend ./frontend

      - name: Push Frontend to Docker Hub
        run: docker push ${{ secrets.DOCKER_PASSWORD }}/chatapp-frontend


      # 5. Deploy on EC2
      - name: Deploy on EC2 server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/chatapp-backend
            docker pull ${{ secrets.DOCKER_USERNAME }}/chatapp-frontend

            # stop & remove old containers
            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true

            # run backend (REST + Socket logic on port 5000 or whatever)
            docker run -d --name backend -p 5000:5000 \
              -e MONGODB_URI=${{ secrets.MONGODB_URI }} \
              ${{ secrets.DOCKER_USERNAME }}/chatapp-backend

            # run frontend (static or serve on port 80)
            docker run -d --name frontend -p 80:80 \
              -e REACT_APP_API=http://${{ secrets.EC2_HOST }}:5000 \
              ${{ secrets.DOCKER_USERNAME }}/chatapp-frontend

